/******************************************************************************/
/*    Filename: clientsocket.cpp                                              */
/*    Description: clientsocket                                               */
/*                                                                            */
/*    Author:zhaocq (changqing.1230@163.com)  2011/2/30 (funny)               */
/******************************************************************************/
#include "message.h"
#include "clientsocket.h"

#include <stdlib.h>
#include <string.h>
#include <sys/socket.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <unistd.h>

#include <iostream>
using namespace std;

#define MAXSLEEP 128

#define DEBUG
#undef DEBUG

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
//clientsocket
ClientSocket::ClientSocket(int fd, char *addr, int port):fd(fd),port(port)
{
	int len = strlen(addr);
	this->addr = new char[len + 1];
	strncpy(this->addr, addr, len + 1);
}

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
//copy constructer
ClientSocket::ClientSocket(const ClientSocket &dest)
{
	//fd = dup(fd);
	fd = dest.fd;

	int len = strlen(dest.addr);
	addr = new char[len + 1];
	strncpy(addr, dest.addr, len + 1);
}

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
ClientSocket::~ClientSocket()
{
	delete addr;

	if(fd > 0)
	{
		close(fd);
		fd = -1;
	}
}

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
int ClientSocket::getFd()
{
	return fd;
}

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
void ClientSocket::setFd(int fd)
{
	this->fd = fd;
}

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
int ClientSocket::getPort()
{
	return port;
}

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
char* ClientSocket::getAddr()
{
	return addr;
}

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
int ClientSocket::recvMessage(Message *rms)
{
#ifdef DEBUG
	cout<<"Debug ClientSocket::recvMessage()"<<endl;
#endif

	 return recv(fd, rms->data, 1024, 0);

#ifdef DEBUG
	cout<<"Debug ClientSocket::recvMessage() over"<<endl;
#endif
}

/***************************************************************************************************
功能说明：
参数说明：
	输入参数：无
	输出参数：无
	返回：无
***************************************************************************************************/
int ClientSocket::sendMessage( Message *wms)
{
#ifdef DEBUG
	cout<<"Debug ClientSocket::sendMessage()"<<endl;
#endif
	char *buf = wms->data;

	int ret = send(fd, buf, 1024, 0);

#ifdef DEBUG
	cout<<"Debug ClientSocket::sendMessage() over: ret = "<<ret<<endl;
#endif
	return ret;
}
